// <auto-generated />
using System;
using Estampas.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Estampas.Migrations
{
    [DbContext(typeof(EstampasDatabaseContext))]
    [Migration("20231214124001_QuitoUsuario")]
    partial class QuitoUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Estampas.Models.Carrito", b =>
                {
                    b.Property<int>("CarritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarritoId"));

                    b.HasKey("CarritoId");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("Estampas.Models.ItemCarrito", b =>
                {
                    b.Property<int>("ItemCarritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemCarritoId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("CarritoId")
                        .HasColumnType("int");

                    b.Property<double>("PrecioTotal")
                        .HasColumnType("float");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("ItemCarritoId");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCarrito");
                });

            modelBuilder.Entity("Estampas.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"));

                    b.Property<int?>("CarritoId")
                        .HasColumnType("int");

                    b.HasKey("PedidoId");

                    b.HasIndex("CarritoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Estampas.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.HasKey("ProductoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Estampas.Models.ItemCarrito", b =>
                {
                    b.HasOne("Estampas.Models.Carrito", "Carrito")
                        .WithMany("ItemsCarrito")
                        .HasForeignKey("CarritoId");

                    b.HasOne("Estampas.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId");

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Estampas.Models.Pedido", b =>
                {
                    b.HasOne("Estampas.Models.Carrito", "Carrito")
                        .WithMany()
                        .HasForeignKey("CarritoId");

                    b.Navigation("Carrito");
                });

            modelBuilder.Entity("Estampas.Models.Producto", b =>
                {
                    b.HasOne("Estampas.Models.Pedido", "Pedido")
                        .WithMany("Productos")
                        .HasForeignKey("PedidoId");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Estampas.Models.Carrito", b =>
                {
                    b.Navigation("ItemsCarrito");
                });

            modelBuilder.Entity("Estampas.Models.Pedido", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
